@charset "UTF-8";
@import '_setting/_setting';

/* モーダル
=========================================================== */

/* Variables
───────────────────────────────── */
$overlay: (
  background: #000,
  opacity: 0.55,
  duration: $base-duration * 1.618,
  delay: 0s,
  z-index: 1000,
);

$modal_item: (
  duration: $base-duration * 1.618,
  delay: 0s,
  z-index: 1001,
);

/* Block
───────────────────────────────── */
.modal {
  background: none;
  // Overlay
  &:before,
  &:after {
    content: '';
    display: block;
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    pointer-events: none;
    transition: opacity map-get($overlay, 'duration') $easing
      map-get($overlay, 'delay');
  }
  &:before {
    background: rgba(
      map-get($overlay, 'background'),
      map-get($overlay, 'opacity')
    );
    z-index: map-get($overlay, 'z-index');
  }
  &.-opened {
    &:before,
    &:after {
      left: 0;
      top: 0;
      opacity: 1;
      pointer-events: auto;
    }
  }
}

/* Item
───────────────────────────────── */
.modal__item {
  position: fixed;
  z-index: map-get($modal_item, 'z-index');
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow-x: hidden;
  overflow-y: auto;
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: none;
  -ms-scroll-chaining: none;
  pointer-events: none;
  opacity: 0;
  transition: opacity map-get($modal_item, 'duration') $easing
      map-get($modal_item, 'delay'),
    top map-get($modal_item, 'duration') $easing map-get($modal_item, 'delay');
  &.-opened {
    pointer-events: auto;
    opacity: 1;
  }

  // Scrollbar
  &::-webkit-scrollbar {
    width: 3px;
  }
  &::-webkit-scrollbar-track {
    background-color: rgba(0, 0, 0, 0.1);
  }
  &::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
  }
}

/* Wrap
───────────────────────────────── */
.modal__wrap {
  position: relative;
  display: flex;
  justify-content: center;
  flex-direction: column;
  min-height: 100%;
  margin: 0 auto;
  @include mq-pc {
    max-width: rem(800);
  }
  @include mq-sp {
    padding: 13vw 0 8vw 0;
  }
}

/* Inner
───────────────────────────────── */
.modal__inner {
  box-sizing: border-box;
  position: relative;
  background-color: #fff;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  @include mq-pc {
    padding: rem(64);
  }
  @include mq-sp {
    padding: 8vw;
  }
}

/* Utility
───────────────────────────────── */
// Close
.modal__closeButton {
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background $base-duration $easing 0s,
    color $base-duration $easing 0s, border-color $base-duration $easing 0s;
  border: 1px solid #cccccc;
  position: relative;
  width: 38.2%;
  margin-left: auto;
  margin-right: auto;
  @include mq-pc {
    font-size: rem(14);
    padding: rem(8);
    margin-top: rem(24);
  }
  @include mq-sp {
    font-size: vw(14);
    padding: 2vw;
    margin-top: 5vw;
    width: 61.8%;
  }
  @include hover {
    color: #fff;
    background: $color-text;
    border-color: $color-text;
    .modal__closeIcon {
      &:before,
      &:after {
        background-color: #fff;
      }
      &:before {
        transform: rotate(0deg);
      }
      &:after {
        transform: rotate(180deg);
      }
    }
  }

  .modal__closeIcon {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    @include mq-pc {
      width: rem(16);
      height: rem(16);
      right: rem(8);
    }
    @include mq-sp {
      width: 3vw;
      height: 3vw;
      right: 3vw;
    }

    &:before,
    &:after {
      background-color: $color-text;
      content: '';
      display: block;
      height: 1px;
      width: inherit;
      position: absolute;
      transition: background-color $base-duration $easing 0s,
        transform $base-duration $easing 0s;
    }

    &:before {
      transform: rotate(45deg);
    }
    &:after {
      transform: rotate(135deg);
    }
  }
}

.modal__closeInterface {
  position: absolute;
  cursor: pointer;
  box-sizing: content-box;
  display: flex;
  align-items: center;
  justify-content: center;
  @include mq-pc {
    right: rem(-64);
    top: rem(-64);
    width: rem(40);
    height: rem(40);
    padding: rem(16);
  }
  @include mq-sp {
    right: 3vw;
    top: -10vw;
    width: 5vw;
    height: 5vw;
    padding: 2vw;
  }
  &:before,
  &:after {
    background-color: #fff;
    content: '';
    display: block;
    height: 1px;
    width: inherit;
    position: absolute;
    transform: rotate(45deg);
    transition: background-color $base-duration $easing 0s,
      transform $base-duration $easing 0s;
  }

  &:before {
    transform: rotate(45deg);
  }
  &:after {
    transform: rotate(135deg);
  }

  @include hover {
    &:before {
      transform: rotate(0);
    }
    &:after {
      transform: rotate(180deg);
    }
  }
}

// Controller
.modal__utility {
  @include mq-sp {
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-template-rows: auto;
  }
}

.modal__prev,
.modal__next {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  transition: background $base-duration $easing;
  @include mq-pc {
    position: absolute;
    top: 50%;
    padding: rem(32);
    transform: translateY(-50%);
  }
  @include mq-sp {
    font-size: vw(13);
    padding: 3vw 5vw;
  }
  .\@svg {
    @include mq-sp {
      width: vw(8);
      height: auto;
    }
  }
  @include hover {
    @include mq-sp {
      background: $color-text;
    }
    .\@svg {
      @include mq-pc {
        transform: scale(1.1618);
      }
    }
  }
  @at-root {
    .modal__item:first-of-type .modal__prev,
    .modal__item:last-of-type .modal__next {
      color: #999;
      pointer-events: none;
      @include mq-sp {
        opacity: 0.382;
        color: #fff;
        cursor: none;
      }
    }
  }
}

// Prev
.modal__prev {
  @include mq-pc {
    left: rem(-80);
    transform: rotate(180deg) translateY(50%);
  }
  .\@svg {
    @include mq-sp {
      transform: rotate(180deg);
    }
  }
  &:after {
    @include mq-sp {
      content: 'PREV';
      margin-left: 3vw;
    }
  }
}

// Next
.modal__next {
  @include mq-pc {
    right: rem(-80);
  }
  @include mq-sp {
    flex-direction: row-reverse;
  }
  &:before {
    transform: rotate(45deg) translateX(-25%) translateY(25%);
  }
  &:after {
    @include mq-sp {
      content: 'NEXT';
      margin-right: 3vw;
    }
  }
}

/* Scroll
───────────────────────────────── */
html {
  &.-fixed,
  &.-fixed body {
    position: fixed;
    max-height: 100vh;
    left: 0;
    width: 100%;
  }
}

/* Trigger
───────────────────────────────── */
.modal__trigger {
  cursor: pointer;
}
